#!/bin/bash

## Script path
SCRIPT_ROOT=$(cd $(dirname "${BASH_SOURCE[0]}") && pwd)
TT_ROOT=$(cd $SCRIPT_ROOT/.. && pwd)

. $TT_ROOT/lib/env.sh
. $TT_ROOT/case/sg2/env.sh

deps() {
    echo "Install deps"
    local version=v4.26.1
    local binary=yq_linux_amd64
    sudo wget https://github.com/mikefarah/yq/releases/download/${version}/${binary} -O /usr/bin/yq
    sudo chmod +x /usr/bin/yq
    echo "Install deps Done"
}

precheck() {
    if [ -z $(command -v yq) ] ; then
        echo "Cannot find yq, please run '$(basename $0) deps'"
        exit 1
    fi
    
    if [ ! -f "$DEK_HOME/single_node_network_edge.yml" ]; then
        echo "Cannot find DEK, please set env DEK_HOME before run the script"
        exit 1
    fi
}

update() {
    echo "Update DEK"
    config $DEK_HOME/inventory.yml "${INVENTORY[@]}"
    config $DEK_HOME/inventory/default/group_vars/all/10-default.yml "${VARS[@]}"
    echo "Update DEK Done"
}

verify() {
    echo "Verify DEK"
    query $DEK_HOME/inventory.yml "${INVENTORY[@]}"
    query $DEK_HOME/inventory/default/group_vars/all/10-default.yml "${VARS[@]}"
    echo "Verify DEK Done"
}

check() {
    echo "Check sg2 status"
    ansible-playbook -i $DEK_HOME/inventory.yml $TT_ROOT/ansible/sg2/check.yml
}

deploy() {
    echo "Deploy DEK"
    $DEK_HOME/deploy.sh
    echo "Deploy DEK Done"
}

usage() {
    echo "\
Usage: $(basename $0) {deps|update|verify|deploy|check}
Single node deployment: 
  $ export CONTROLLER_HOST=a.b.c.d
  $ export NODE_HOST=\$CONTROLLER_HOST
Multi-Node deployment: 
  $ export CONTROLLER_HOST=a.b.c.d
  $ export NODE_HOST=e.f.g.h
Note: please export the env varibles before run the commands"
}

main() {
    case $1 in
        deps )
            deps
            ;;
        update )
            precheck
            update
            ;;
        verify )
            precheck
            verify
            ;;
        deploy )
            precheck
            deploy
            ;;
        check )
            precheck
            check
            ;;
        * )
            usage
            ;;
    esac
}

main $*
